@model SEO_WEB.Models.User
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Đăng ký</title>
    <link href="~/Assets/Client/css/style2.css" rel="stylesheet" />
</head>
<body>
    <div class="min-h-screen flex justify-center items-center bg-gray-100">
        @using (Html.BeginForm("SignUp", "AdminAccount", FormMethod.Post, new { @class = "form", enctype = "multipart/form-data", onsubmit = "return onSubmit()" }))
        {
            @Html.AntiForgeryToken()
            <h1 class="font-bold text-center text-2xl">LOGO</h1>
            <div class="bg-white shadow-md w-full rounded-sm p-5">

                <label class="font-semibold text-sm">Tên</label>
                @Html.TextBoxFor(Model => Model.DisplayName, new { @class = "border rounded-sm px-3 py-2 mt-1 w-full" })
                @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })<br /><br />

                <label class="font-semibold text-sm">Email</label>
                @Html.TextBoxFor(Model => Model.Email, new { @class = "border rounded-sm px-3 py-2 mt-1 w-full" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })<br /><br />

                <label class="font-semibold text-sm">Tài khoản</label>
                @Html.TextBoxFor(Model => Model.Username, new { @class = "border rounded-sm px-3 py-2 mt-1 w-full" })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })<br /><br />

                <label class="font-semibold text-sm">Mật khẩu</label>
                @Html.PasswordFor(Model => Model.Password, new { @class = "border rounded-sm px-3 py-2 mt-1 w-full" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })<br /><br />

                <label class="font-semibold text-sm">Nhập lại mật khẩu</label>
                @Html.Password("txtConfirmPassword", "", new { @class = "confirm" }) <br /><br />


                <div>
                    <input type="file" name="ImageUpload" id="img-input" />

                    <img src="~/Assets/Admin/images/user/user-main.jpg" width="200" height="200" id="preImage" />
                </div>

                @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })<br />


                <span class="text-sm text-lightBlue-700 block">
                    <a href="/dang-nhap">Đăng nhập</a>
                </span>

                <button type="submit" class="btn btn-primary mt-3">Đăng kí</button>
            </div>
        }
    </div>
</body>
</html>

<script>
    const obj = {
        init: function () {
            this.updateImage();
        },
        updateImage: function () {
            document.querySelector("#img-input").addEventListener('change', function () {
                let ImageUpload = document.getElementById('img-input');
                let preImage = document.getElementById('preImage')

                console.log(ImageUpload, preImage);

                if (ImageUpload.files && ImageUpload.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        preImage.src = e.target.result;
                    }
                    reader.readAsDataURL(ImageUpload.files[0]);
                }
            })

        }
    }

    obj.init();

    function onSubmit() {
        let pass = document.querySelector('.password');
        let confirm = document.querySelector('.confirm');

        if (pass.value != confirm.value) {
            alert("Xác nhận mật khẩu không hợp lệ");

            return false;
        }

        return true;
    }
</script>